class Basin{constructor(s,e){if(e||(e={}),this.seasons={},this.seasonsBusyLoading={},this.seasonExpirationTimers={},this.activeSystems=[],this.subBasins={},this.addSubBasin(DEFAULT_MAIN_SUBBASIN,void 0,void 0,void 0,Scale.presetScales[e.scale||0].clone().flavor(e.scaleFlavor||0).colorScheme(e.scaleColorScheme||0),DesignationSystem.presetDesignationSystems[e.designations||0].clone().setSecondary(!1)),this.tick=0,this.lastSaved=0,this.godMode=e.godMode,this.SHem=e.hem,this.actMode=e.actMode||0,void 0!==e.year?this.startYear=e.year:this.startYear=this.SHem?SHEM_DEFAULT_YEAR:NHEM_DEFAULT_YEAR,this.mapType=e.mapType||0,"CPac"===MAP_TYPES[this.mapType].special?(this.subBasins[DEFAULT_MAIN_SUBBASIN].designationSystem.naming.crossingMode=DESIG_CROSSMODE_KEEP,this.subBasins[DEFAULT_MAIN_SUBBASIN].designationSystem.numbering.crossingMode=DESIG_CROSSMODE_KEEP,this.addSubBasin(128,void 0,"Central Pacific",DEFAULT_MAIN_SUBBASIN,void 0,DesignationSystem.centralPacific.clone().setCrossingModes(DESIG_CROSSMODE_KEEP,DESIG_CROSSMODE_KEEP))):"PAGASA"===MAP_TYPES[this.mapType].special?this.addSubBasin(128,void 0,"PAGASA AoR",DEFAULT_MAIN_SUBBASIN,void 0,DesignationSystem.PAGASA.clone()):"NIO"===MAP_TYPES[this.mapType].special?(this.addSubBasin(128,void 0,"Arabian Sea",DEFAULT_MAIN_SUBBASIN,void 0,new DesignationSystem({prefix:"ARB",numCross:DESIG_CROSSMODE_KEEP})),this.addSubBasin(129,void 0,"Bay of Bengal",DEFAULT_MAIN_SUBBASIN,void 0,new DesignationSystem({prefix:"BOB",numCross:DESIG_CROSSMODE_KEEP}))):"AUS"===MAP_TYPES[this.mapType].special&&(this.subBasins[DEFAULT_MAIN_SUBBASIN].designationSystem.naming.crossingMode=DESIG_CROSSMODE_KEEP,this.subBasins[DEFAULT_MAIN_SUBBASIN].designationSystem.numbering.crossingMode=DESIG_CROSSMODE_KEEP,this.addSubBasin(128,void 0,"Jakarta TCWC",DEFAULT_MAIN_SUBBASIN,void 0,DesignationSystem.australianRegionJakarta.clone().setCrossingModes(void 0,DESIG_CROSSMODE_KEEP)),this.addSubBasin(129,void 0,"Port Moresby TCWC",DEFAULT_MAIN_SUBBASIN,void 0,DesignationSystem.australianRegionPortMoresby.clone().setCrossingModes(void 0,DESIG_CROSSMODE_KEEP))),this.seed=e.seed||moment().valueOf(),this.env=new Environment(this),this.saveName=s||AUTOSAVE_SAVE_NAME,s)this.initialized=this.load();else{Basin.deleteSave(AUTOSAVE_SAVE_NAME);let s=()=>{noiseSeed(this.seed),this.env.init(),land=new Land(this),this.seasons[this.getSeason(-1)]=new Season(this),this.expireSeasonTimer(this.getSeason(-1)),this.env.record()};"pixelmap"===MAP_TYPES[this.mapType].form?this.initialized=loadImg(MAP_TYPES[this.mapType].path).then(e=>(e.loadPixels(),this.mapImg=e,s(),this)).catch(s=>{console.error(s)}):(s(),this.initialized=Promise.resolve(this))}}mount(){viewTick=this.tick,UI.viewBasin=this,selectedStorm=void 0,paused=0!==this.tick,refreshTracks(!0),primaryWrapper.show(),renderToDo=land.draw()}advanceSim(){let s=this.viewingPresent(),e=this.getSeason(-1);this.tick++;let t=this.getSeason(viewTick);viewTick=this.tick;let i=this.getSeason(-1);if(i!==e){let s=new Season(this);for(let e of this.activeSystems)s.addSystem(new StormRef(this,e.fetchStorm()));this.seasons[i]=s,this.expireSeasonTimer(i)}s&&i===t||refreshTracks(i!==t),this.env.wobble();for(let s=0;s<this.activeSystems.length;s++){for(let e=s+1;e<this.activeSystems.length;e++)this.activeSystems[s].interact(this.activeSystems[e],!0);this.activeSystems[s].update()}SPAWN_RULES[this.actMode](this);let a=!1;for(let s=this.activeSystems.length-1;s>=0;s--)this.activeSystems[s].fetchStorm().current||(this.activeSystems.splice(s,1),a=!0);a&&refreshTracks(),this.tick%ADVISORY_TICKS==0?(this.env.displayLayer(),this.env.record()):simSettings.showMagGlass&&this.env.updateMagGlass();let n=this.tickMoment();!simSettings.doAutosave||1!==n.date()&&15!==n.date()||0!==n.hour()||this.save()}startTime(){let s=this.startYear,e=moment.utc([s]);return this.SHem&&(e.month(6),e.year(s-1)),e.valueOf()}tickMoment(s){return void 0===s&&(s=this.tick),moment.utc(this.startTime()+s*TICK_DURATION)}tickFromMoment(s){if(s instanceof moment)return floor((s.valueOf()-this.startTime())/TICK_DURATION)}seasonTick(s){void 0===s&&(s=this.getSeason(-1));let e=moment.utc(this.SHem?[s-1,6,1]:[s,0,1]),t=floor((e.valueOf()-this.startTime())/TICK_DURATION);return t=floor(t/ADVISORY_TICKS)*ADVISORY_TICKS}viewingPresent(){return viewTick===this.tick}hem(s){return this.SHem?-s:s}hemY(s){return this.SHem?HEIGHT-s:s}spawn(...s){this.activeSystems.push(new ActiveSystem(this,...s))}addSubBasin(s,...e){s=parseInt(s),this.subBasins[s]=new SubBasin(this,s,...e)}subInBasin(s){let e=this.subBasins[s];return e instanceof SubBasin?!e.outBasin():s!==DEFAULT_OUTBASIN_SUBBASIN}*forSubBasinChain(s){let e=this.subBasins[s];e instanceof SubBasin?yield*e.forChain():(yield s,s!==DEFAULT_OUTBASIN_SUBBASIN&&(yield DEFAULT_MAIN_SUBBASIN))}relevantPrimaryDesignationSubBasins(s){if(void 0!==s){let e,t,i,a;for(let n of this.forSubBasinChain(s)){let s=this.subBasins[n];if(s instanceof SubBasin&&s.designationSystem){let o=s.designationSystem;o.secondary||(void 0===e&&(o.numbering.enabled?e=n:(void 0!==o.numbering.prefix&&(i=o.numbering.prefix),void 0!==o.numbering.suffix&&(a=o.numbering.suffix))),void 0===t&&o.naming.mainLists.length>0&&(t=n))}if(void 0!==e&&void 0!==t)break}return{numbering:e,naming:t,altPre:i,altSuf:a}}}getScale(s){let e;for(let t of this.forSubBasinChain(s)){let s=this.subBasins[t];if(s instanceof SubBasin&&s.scale){e=s.scale;break}}if(e)return e;let t=this.subBasins[DEFAULT_MAIN_SUBBASIN];return t instanceof SubBasin&&t.scale?t.scale:Scale.saffirSimpson}getSeason(s){if(-1===s&&(s=this.tick),this.SHem){let e=this.tickMoment(s),t=e.month(),i=e.year();return t>=6?i+1:i}return this.tickMoment(s).year()}fetchSeason(s,e,t,i){let a,n;if(e&&(s=this.getSeason(s)),this.seasons[s]?(a=this.seasons[s],n=Promise.resolve(a)):n=this.seasonsBusyLoading[s]?this.seasonsBusyLoading[s]:this.seasonsBusyLoading[s]=waitForAsyncProcess(()=>db.seasons.where("[saveName+season]").equals([this.saveName,s]).last().then(e=>{if(e){let t=LoadData.wrap(e),i=this.seasons[s]=new Season(this,t);return this.expireSeasonTimer(s),this.seasonsBusyLoading[s]=void 0,i.lastAccessed=moment().valueOf(),i}}),"Retrieving Season..."),a)a.lastAccessed=moment().valueOf();else if(t)throw new Error(LOADED_SEASON_REQUIRED_ERROR);if(i instanceof Function)n.then(i);else if(i)return n;return a}seasonUnloadable(s){if(s=parseInt(s),!this.seasons[s])return!1;let e=this.seasons[s],t=this.getSeason(viewTick);for(let e of this.activeSystems)if(e.fetchStorm().originSeason()===s)return!1;return!e.modified&&s!==t&&s!==t-1&&s!==this.getSeason(-1)}expireSeasonTimer(s){this.seasonExpirationTimers[s]=setTimeout(()=>{this.seasons[s]&&(moment().diff(this.seasons[s].lastAccessed)>=LOADED_SEASON_EXPIRATION&&this.seasonUnloadable(s)?this.seasons[s]=void 0:this.expireSeasonTimer(s))},LOADED_SEASON_EXPIRATION)}save(){let s=[];for(let e in this.seasons)if(this.seasons[e]&&this.seasons[e].modified){let t=this.seasons[e];for(let e=0;e<t.systems.length;e++)t.systems[e]instanceof StormRef&&s.push(this.fetchSeason(t.systems[e].season,!1,!1,!0))}return Promise.all(s).then(()=>{let s={};s.format=SAVE_FORMAT;let e=s.value={};e.activeSystems=[];for(let s of this.activeSystems)e.activeSystems.push(s.save());e.envData={};for(let s of this.env.fieldList){let t=e.envData[s]={};t.version=this.env.fields[s].version,t.accurateAfter=this.env.fields[s].accurateAfter;let i=t.noiseData=[];for(let e of this.env.fields[s].noise)i.push(e.save())}e.subBasins={};for(let s in this.subBasins){let t=this.subBasins[s];t instanceof SubBasin&&(e.subBasins[s]=t.save())}e.flags=0,e.flags|=0,e.flags<<=1,e.flags|=this.godMode,e.flags<<=1,e.flags|=this.SHem;for(let s of["mapType","tick","seed","startYear","actMode"])e[s]=this[s];return db.transaction("rw",db.saves,db.seasons,()=>{db.saves.put(s,this.saveName);for(let s in this.seasons)if(this.seasons[s]&&this.seasons[s].modified){let e={};e.format=SAVE_FORMAT,e.saveName=this.saveName,e.season=parseInt(s),e.value=this.seasons[s].save();let t=db.seasons.where("[saveName+season]").equals([this.saveName,e.season]);t.count().then(s=>{s>1?t.delete().then(()=>{db.seasons.put(e)}):1===s?t.modify((s,t)=>{t.value=e}):db.seasons.put(e)})}}).then(()=>{this.lastSaved=this.tick;for(let s in this.seasons)this.seasons[s]&&(this.seasons[s].modified=!1)})}).catch(s=>{console.warn("Could not save due to an error"),console.error(s)})}load(){return waitForAsyncProcess(()=>db.saves.get(this.saveName).then(s=>{if(s&&s.format>=EARLIEST_COMPATIBLE_FORMAT){let e,t,i,a,n,o,r=LoadData.wrap(s);if(r.format>=FORMAT_WITH_INDEXEDDB){let s=r.value;for(let e of s.activeSystems)this.activeSystems.push(new ActiveSystem(this,r.sub(e)));if(t=r.sub(s.envData),s.subBasins)for(let e in s.subBasins){let t=s.subBasins[e];"object"==typeof t&&this.addSubBasin(e,r.sub(t))}let h=s.flags;this.SHem=1&h,h>>=1,this.godMode=1&h,e=1&(h>>=1);for(let e of["mapType","tick","seed","startYear","actMode"])this[e]=s[e];s.nameList&&(i=s.nameList),void 0!==s.sequentialNameIndex&&(a=s.sequentialNameIndex),s.hypoCats&&(n=s.hypoCats),void 0!==s.hurricaneStrengthTerm&&(o=s.hurricaneStrengthTerm),this.lastSaved=this.tick}else{let s=r.value.str,n=r.format,h=r.value.names;if(s){let l=s.split(";"),S=decodeB36StringArray(l.pop()),d=S.pop()||0;if(this.startYear=S.pop(),this.seed=S.pop()||moment().valueOf(),this.lastSaved=this.tick=S.pop()||0,a=S.pop(),o=S.pop()||0,this.mapType=S.pop()||0,this.SHem=1&d,d>>=1,this.godMode=1&d,e=1&(d>>=1),void 0===this.startYear&&(this.startYear=this.SHem?SHEM_DEFAULT_YEAR:NHEM_DEFAULT_YEAR),h){if((h=h.split(";"))[0].indexOf(",")>-1){for(let s=0;s<h.length;s++)h[s]=h[s].split(",");""===h[0][0]&&h[0].shift()}i=h}void 0===a&&(a="string"==typeof i[0]?0:-1);let m=l.pop();m&&(t=r.sub(m.split(",")));let c=l.pop();if(c)for(c=c.split(",");c.length>0;)this.activeSystems.push(new ActiveSystem(this,r.sub(c.pop())));n<FORMAT_WITH_SAVED_SEASONS&&(this.lastSaved=this.tick=0)}}if(void 0===this.actMode&&(this.actMode=e?SIM_MODE_HYPER:SIM_MODE_NORMAL),this.env.init(t),i){let s=DesignationSystem.convertFromOldNameList(i);s.naming.annual||(s.naming.continuousNameIndex=a),this.addSubBasin(DEFAULT_MAIN_SUBBASIN,void 0,void 0,void 0,void 0,s)}if(r.format<FORMAT_WITH_SCALES){this.subBasins[DEFAULT_MAIN_SUBBASIN]||this.addSubBasin(DEFAULT_MAIN_SUBBASIN);let s=this.subBasins[DEFAULT_MAIN_SUBBASIN];s instanceof SubBasin&&(s.scale=n?Scale.extendedSaffirSimpson.clone():Scale.saffirSimpson.clone(),void 0!==o&&s.scale.flavor(0===o?2:o-1))}}else{let s="Could not load basin";console.error(s),alert(s)}return this}).then(s=>"pixelmap"===MAP_TYPES[s.mapType].form?loadImg(MAP_TYPES[s.mapType].path).then(e=>(e.loadPixels(),s.mapImg=e,s)):s).then(s=>(noiseSeed(s.seed),land=new Land(s),s.fetchSeason(-1,!0,!1,!0).then(e=>{let t=[];for(let i=0;i<e.systems.length;i++){let a=e.systems[i];a instanceof StormRef&&(void 0===a.lastApplicableAt||a.lastApplicableAt>=s.tick||2===simSettings.trackMode)&&t.push(s.fetchSeason(a.season,!1,!1,!0))}return Promise.all(t)}))).then(()=>this),"Loading Basin...").catch(s=>{console.error(s)})}saveAs(s){let e=this.saveName;return Basin.deleteSave(s,()=>db.transaction("rw",db.saves,db.seasons,()=>{db.saves.get(e).then(e=>{db.saves.put(e,s)}),db.seasons.where("saveName").equals(e).modify(e=>{db.seasons.put({format:e.format,saveName:s,season:e.season,value:e.value})})}).then(()=>{this.saveName=s,this.save()}))}static deleteSave(s,e){return db.transaction("rw",db.saves,db.seasons,()=>{db.saves.delete(s),db.seasons.where("saveName").equals(s).delete()}).then(e).catch(s=>{console.error(s)})}}class Season{constructor(s,e){s instanceof Basin&&(this.basin=s),this.systems=[],this.envData={},this.idSystemCache={},this.subBasinStats={},this.totalSystemCount=0,this.envRecordStarts=0,this.modified=!0,this.lastAccessed=moment().valueOf(),e instanceof LoadData&&this.load(e)}addSystem(s){this.systems.push(s),s.current&&(s.id=this.totalSystemCount++),this.modified=!0}fetchSystemById(s){if(this.idSystemCache[s])return this.idSystemCache[s];for(let e=0;e<this.systems.length;e++){let t=this.systems[e];if(t.id===s)return this.idSystemCache[s]=t,t}return null}fetchSystemAtIndex(s,e){if(this.systems[s]instanceof StormRef){if(e){let e=this.systems[s];return void 0===e.lastApplicableAt||e.lastApplicableAt>=viewTick||2===simSettings.trackMode?e.fetch():void 0}return this.systems[s].fetch()}return this.systems[s]}*forSystems(s){for(let e=0;e<this.systems.length;e++){let t=this.fetchSystemAtIndex(e,s);t&&(yield t)}}stats(s){let e=this.subBasinStats[s];return e instanceof SeasonStats?e:this.subBasinStats[s]=new SeasonStats(this.basin,s)}save(s){let e=this.basin,t={};for(let s of["totalSystemCount","envRecordStarts"])t[s]=this[s];t.stats={};for(let s in this.subBasinStats){let e=this.subBasinStats[s];e instanceof SeasonStats&&(t.stats[s]=e.save())}t.envData={};for(let s of e.env.fieldList){let i=t.envData[s]={};for(let t=0;t<e.env.fields[s].noise.length;t++){let e=i[t]={},a=[],n=[],o=[];for(let e of this.envData[s][t])a.push(e.x),n.push(e.y),o.push(e.z);e.x=new Float32Array(a),e.y=new Float32Array(n),e.z=new Float32Array(o)}}t.systems=[];for(let e=0;e<this.systems.length;e++){let i=this.systems[e];i instanceof StormRef&&(s||i.fetch()&&(i.fetch().inBasinTC||i.fetch().current))?t.systems.push({isRef:!0,val:i.save()}):(i.inBasinTC||i.current)&&t.systems.push({isRef:!1,val:i.save()})}return t}load(s){let e=this.basin;if(s instanceof LoadData&&s.format>=EARLIEST_COMPATIBLE_FORMAT){let t={};if(s.format>=FORMAT_WITH_INDEXEDDB){let i=s.value;for(let s of["totalSystemCount","envRecordStarts"])this[s]=i[s]||0;if(s.format<FORMAT_WITH_SUBBASIN_SEASON_STATS)for(let s of["depressions","namedStorms","hurricanes","majors","c5s","c8s","hypercanes","ACE","deaths","damage","landfalls"])t[s]=i[s];if(i.stats)for(let t in i.stats)this.subBasinStats[t]=new SeasonStats(e,t,s.sub(i.stats[t]));if(s.format>ENVDATA_COMPATIBLE_FORMAT&&i.envData)for(let s of e.env.fieldList){let t=this.envData[s]={};for(let a=0;a<e.env.fields[s].noise.length;a++){let e=t[a]=[],n=i.envData[s][a],o=[...n.x],r=[...n.y],h=[...n.z];for(let s=0;s<o.length;s++)e.push({x:o[s],y:r[s],z:h[s]})}}for(let t=0;t<i.systems.length;t++){let a=i.systems[t];if(a.isRef)this.systems.push(new StormRef(e,s.sub(a.val)));else{let t=s.sub(a.val);t.season=s.season,this.systems.push(new Storm(e,t))}}}else{let i=s.value.split(";"),a=decodeB36StringArray(i[0]);if(s.format=a.pop(),void 0===s.format)return void(this.envData=null);if(this.envRecordStarts=a.pop()||0,t.damage=a.pop()*DAMAGE_DIVISOR||0,t.deaths=a.pop()||0,t.ACE=a.pop()/ACE_DIVISOR||0,t.c5s=a.pop()||0,t.majors=a.pop()||0,t.hurricanes=a.pop()||0,t.namedStorms=a.pop()||0,t.depressions=a.pop()||0,this.totalSystemCount=a.pop()||0,s.format>=ENVDATA_COMPATIBLE_FORMAT&&""!==i[1]){let s=i[1].split(","),t=0,a=s=>e=>map(e,0,ENVDATA_SAVE_MULT,-s,s);for(let i of e.env.fieldList)for(let n=0;n<e.env.fields[i].noise.length;n++,t++){let o=e.env.fields[i].noise[n],r=s[t].split("."),h=decodeB36StringArray(r[0]);h={x:h[0],y:h[1],z:h[2]};let l={};l.h=l.w=ENVDATA_SAVE_MULT;let S=o.wobbleMax/o.zoom*ADVISORY_TICKS,d=o.zWobbleMax/o.zZoom*ADVISORY_TICKS;l.mapY=l.mapX=a(S),l.mapZ=a(d);let m=decodePointArray(r[1],l);for(let s=0;s<m.length;s++){let e;e=0===s?h:m[s-1];let t=m[s];m[s]={x:e.x+t.x,y:e.y+t.y,z:e.z+t.z}}m.unshift(h),this.envData[i]||(this.envData[i]={}),this.envData[i][n]=m}}else this.envData=null;let n=i[2];for(let t=0,i=0;i<n.length;t=i){i=(i=n.slice(t+1).search(/[~,]/g))<0?n.length:t+1+i;let a=n.slice(t,i);if("~"===a.charAt(0))this.systems.push(new StormRef(e,s.sub(a.slice(1))));else if(","===a.charAt(0)){let t=s.sub(a.slice(1));t.season=s.season,this.systems.push(new Storm(e,t))}}}if(s.format<FORMAT_WITH_SUBBASIN_SEASON_STATS){let s=this.stats(DEFAULT_MAIN_SUBBASIN);for(let e of["ACE","deaths","damage","landfalls"])s[e]=t[e]||0;let i=s.classificationCounters;i[0]=t.depressions||0,i[1]=t.namedStorms||0,i[2]=t.hurricanes||0,i[4]=t.majors||0,i[7]=t.c5s||0,e.getScale(DEFAULT_MAIN_SUBBASIN).classifications.length>8&&(i[10]=t.c8s||0,i[13]=t.hypercanes||0);let a=s.designationCounters;a.number=t.depressions||0,a.name=t.namedStorms||0}s.format===SAVE_FORMAT?this.modified=!1:db.transaction("rw",db.seasons,()=>{let e={};e.format=SAVE_FORMAT,e.saveName=s.saveName,e.season=s.season,e.value=this.save(!0);let t=db.seasons.where("[saveName+season]").equals([s.saveName,s.season]);t.count().then(s=>{s>0?t.modify((s,t)=>{t.value=e}):db.seasons.put(e)})}).then(()=>{this.modified=!1}).catch(s=>{console.error(s)})}else this.envData=null}}class SeasonStats{constructor(s,e,t){this.basin=s instanceof Basin&&s,this.subBasinId=e,this.basin&&(this.subBasin=this.basin.subBasins[this.subBasinId]),this.ACE=0,this.deaths=0,this.damage=0,this.landfalls=0,this.classificationCounters={};let i=this.basin.getScale(this.subBasinId).classifications.length;for(let s=0;s<i;s++)this.classificationCounters[s]=0;this.designationCounters={},this.designationCounters.number=0,this.designationCounters.name=0,t instanceof LoadData&&this.load(t)}addACE(s){this.ACE=round((this.ACE+s)*ACE_DIVISOR)/ACE_DIVISOR}save(){let s={};if(this.subBasin instanceof SubBasin?!this.subBasin.outBasin():this.subBasinId!==DEFAULT_OUTBASIN_SUBBASIN){for(let e of["ACE","deaths","damage","landfalls"])s[e]=this[e];s.cCounters={};for(let e in this.classificationCounters)s.cCounters[e]=this.classificationCounters[e]}return s.dCounters={},s.dCounters.number=this.designationCounters.number,s.dCounters.name=this.designationCounters.name,s}load(s){if(s instanceof LoadData){let e=s.value;if(this.subBasin instanceof SubBasin?!this.subBasin.outBasin():this.subBasinId!==DEFAULT_OUTBASIN_SUBBASIN){for(let s of["ACE","deaths","damage","landfalls"])this[s]=e[s];if(e.cCounters)for(let t in e.cCounters)s.format>=FORMAT_WITH_SCALES?this.classificationCounters[t]=e.cCounters[t]:(this.classificationCounters[Scale.convertOldValue(+t)]=e.cCounters[t],"5"===t&&(this.classificationCounters[6]=e.cCounters[t]))}e.dCounters&&(this.designationCounters.number=e.dCounters.number,this.designationCounters.name=e.dCounters.name)}}}class SubBasin{constructor(s,e,t,i,a,n,o){if(this.basin=s instanceof Basin&&s,this.id=e||DEFAULT_MAIN_SUBBASIN,this.parent=void 0,a?this.parent=a:this.id!==DEFAULT_MAIN_SUBBASIN&&this.id!==DEFAULT_OUTBASIN_SUBBASIN&&!1!==a&&(this.parent=DEFAULT_MAIN_SUBBASIN),this.displayName=void 0,i&&(this.displayName=i),this.designationSystem=void 0,this.scale=void 0,this.setDesignationSystem(o),n instanceof Scale&&(this.scale=n),this.mapOutline=void 0,!this.outBasin()&&this.id!==DEFAULT_MAIN_SUBBASIN){let{fullW:s,fullH:e}=fullDimensions();this.mapOutline=createBuffer(s,e,!0),this.mapOutline.noStroke()}t instanceof LoadData&&this.load(t)}setDesignationSystem(s){s instanceof DesignationSystem&&(s.setSubBasin(this),this.designationSystem=s)}outBasin(s){if(this.id===DEFAULT_MAIN_SUBBASIN)return!1;if(this.parent===DEFAULT_MAIN_SUBBASIN)return!1;if(void 0===this.parent)return!0;if(this.parent===s)return!0;let e=this.basin.subBasins[this.parent];return e instanceof SubBasin?e.outBasin(s||this.id):this.parent===DEFAULT_OUTBASIN_SUBBASIN}getDisplayName(){return this.displayName?this.displayName:this.id===DEFAULT_MAIN_SUBBASIN?"Main Basin":"SubBasin "+this.id}*forParents(s){if(this.id!==DEFAULT_MAIN_SUBBASIN&&void 0!==this.parent&&this.parent!==s&&(yield this.parent,this.parent!==DEFAULT_MAIN_SUBBASIN)){let e=this.basin.subBasins[this.parent];e instanceof SubBasin?yield*e.forParents(s||this.id):this.parent!==DEFAULT_OUTBASIN_SUBBASIN&&(yield DEFAULT_MAIN_SUBBASIN)}}*forChain(){yield this.id,yield*this.forParents()}save(){let s={};for(let e of["parent","displayName"])s[e]=this[e];return s.desSys=void 0,s.scale=void 0,this.designationSystem instanceof DesignationSystem&&(s.desSys=this.designationSystem.save()),this.scale instanceof Scale&&(s.scale=this.scale.save()),s}load(s){if(s instanceof LoadData){let e=s.value;for(let s of["parent","displayName"])this[s]=e[s];e.desSys&&this.setDesignationSystem(new DesignationSystem(s.sub(e.desSys))),e.scale&&(this.scale=new Scale(s.sub(e.scale)))}}}function setupDatabase(){db=new Dexie("cyclone-sim"),db.version(1).stores({saves:"",seasons:"++,saveName,season",settings:""}),db.version(2).stores({saves:",format",seasons:"++,format,saveName,[saveName+season]"})}class LoadData{constructor(s,e){this.format=s,this.value=e}sub(s){return new LoadData(this.format,s)}static wrap(s){let e=new LoadData(s.format,s.value);for(let t in s)"format"!==t&&"value"!==t&&(e[t]=s[t]);return e}}function decodeB36StringArray(s){const e=SAVING_RADIX;let t=[],i=s.slice(0,1);(i=parseInt(i,e))>e/2&&(i-=e);for(let a,n=1,o=0,r=0;n<s.length;n+=a,r++){r>=o&&(o=s.slice(n,++n),a=s.slice(n,++n),o=parseInt(o,e)+1,a=parseInt(a,e)+1,r=0);let h=s.slice(n,n+a);h=(h=parseInt(h,e))%2==0?h/2:-(h-1)/2,h*=pow(e,i),t.push(h)}return t}function decodePoint(s,e){e||(e={});let t=floor(e.w||WIDTH),i=floor(e.h||HEIGHT),a=floor(s/(t*i));s%=t*i;let n=floor(s/t),o=s%=t;return e.mapX instanceof Function&&(o=e.mapX(o)),e.mapY instanceof Function&&(n=e.mapY(n)),e.mapZ instanceof Function&&(a=e.mapZ(a)),e.p5Vec?createVector(o,n,a):{x:o,y:n,z:a}}function decodePointArray(s,e){let t=decodeB36StringArray(s);for(let s=0;s<t.length;s++)t[s]=decodePoint(t[s],e);return t}