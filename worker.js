const WORKER_PATH="worker.js";onmessage=function(e){let r,s,t=e.data.task,o=e.data.id,a=e.data.input;try{if("addfive"===t)r=a+5;else{if("saderror"===t)throw"a sad error";if("loopy"===t){r=3;for(let e=0;e<a;e++)r*=1.2}else r=a}}catch(e){s=e,r=null}postMessage({task:t,id:o,error:s,output:r})};class CSWorker{constructor(){this.worker=new Worker(WORKER_PATH),this.promiseHandlers={},this.lowestFreeHandlerSlot=0,this.busy=0,this.worker.onmessage=(e=>{let r=e.data.id;e.data.error?this.promiseHandlers[r].reject(e.data.error):this.promiseHandlers[r].resolve(e.data.output),this.promiseHandlers[r]=void 0,r<this.lowestFreeHandlerSlot&&(this.lowestFreeHandlerSlot=r),this.busy--})}run(e,r){return new Promise((s,t)=>{let o=this.lowestFreeHandlerSlot;for(this.promiseHandlers[o]={resolve:s,reject:t};void 0!==this.promiseHandlers[this.lowestFreeHandlerSlot];)this.lowestFreeHandlerSlot++;this.busy++,this.worker.postMessage({task:e,id:o,input:r})})}}